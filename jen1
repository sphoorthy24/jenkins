pipeline {
    agent any

    environment {
        GIT_SSH_COMMAND = 'ssh -o StrictHostKeyChecking=no'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Generate SSH key (if not already generated)
                    sshKey = sshUserPrivateKey(
                        credentialsId: '0c3a267f-f450-447b-8beb-b00e9bf5b383',
                        keyFileVariable: 'SSH_PRIVATE_KEY',
                        passphraseVariable: '',
                        generate: true
                    )

                    // Use the generated SSH key for Git operations
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: '*/master']],
                        userRemoteConfigs: [[
                            credentialsId: '0c3a267f-f450-447b-8beb-b00e9bf5b383',
                            url: 'git@github.com:sphoorthy24/jenkins.git'
                        ]]
                    ])
                }
            }
        }

        stage('Build') {
    steps {
        script {
            // Your build steps go here
            def mvnHome = tool 'Maven'
            sh "${mvnHome}/bin/mvn clean install"
        }
    }
}


        stage('Test') {
            steps {
                script {
                    // Your test steps go here
                    sh 'mvn test' // Example Maven test step
                }
            }
        }

        stage('Deploy') {
            steps {
                // Use gcloud commands to deploy to Google Compute Engine
                sh 'gcloud compute instances create instance-jen --image c0-deeplearning-common-cpu-v20230925-debian-10'
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded! You can add more post-success actions here.'
            
        }
        failure {
            echo 'Pipeline failed! You can add more post-failure actions here.'
        }
    }
}
